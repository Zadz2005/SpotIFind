{"ast":null,"code":"// API Configuration for Spot-I-Find Frontend\n// This file handles the backend API URL for different environments\n\n// Get the API URL from environment variables or use default\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n\n// API endpoints\nexport const API_ENDPOINTS = {\n  COUNTRIES: `${API_BASE_URL}/api/v1/Country`,\n  ARTIST_DETAILS: `${API_BASE_URL}/api/v1/artist-details`\n};\n\n// Helper function to make API calls\nexport const apiCall = async (endpoint, options = {}) => {\n  try {\n    const response = await fetch(endpoint, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    });\n    if (!response.ok) {\n      throw new Error(`API call failed: ${response.status} ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API call error:', error);\n    throw error;\n  }\n};\n\n// Specific API functions\nexport const fetchCountries = () => apiCall(API_ENDPOINTS.COUNTRIES);\nexport const fetchCountriesByName = countryName => {\n  const url = new URL(API_ENDPOINTS.COUNTRIES);\n  url.searchParams.append('countryName', countryName);\n  return apiCall(url.toString());\n};\nexport const fetchArtistDetailsByName = artistName => {\n  const url = new URL(API_ENDPOINTS.ARTIST_DETAILS);\n  url.searchParams.append('artist', artistName);\n  return apiCall(url.toString());\n};\nexport const fetchArtistDetails = (params = {}) => {\n  const url = new URL(API_ENDPOINTS.ARTIST_DETAILS);\n  Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n  return apiCall(url.toString());\n};\nexport default API_ENDPOINTS;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","API_ENDPOINTS","COUNTRIES","ARTIST_DETAILS","apiCall","endpoint","options","response","fetch","headers","ok","Error","status","statusText","json","error","console","fetchCountries","fetchCountriesByName","countryName","url","URL","searchParams","append","toString","fetchArtistDetailsByName","artistName","fetchArtistDetails","params","Object","keys","forEach","key"],"sources":["C:/Users/zahid/Downloads/Spot-I-Find/Spot-I-Find/spot-i-find-frontend/src/utils/apiConfig.js"],"sourcesContent":["// API Configuration for Spot-I-Find Frontend\r\n// This file handles the backend API URL for different environments\r\n\r\n// Get the API URL from environment variables or use default\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\r\n\r\n// API endpoints\r\nexport const API_ENDPOINTS = {\r\n  COUNTRIES: `${API_BASE_URL}/api/v1/Country`,\r\n  ARTIST_DETAILS: `${API_BASE_URL}/api/v1/artist-details`,\r\n};\r\n\r\n// Helper function to make API calls\r\nexport const apiCall = async (endpoint, options = {}) => {\r\n  try {\r\n    const response = await fetch(endpoint, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`API call failed: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('API call error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Specific API functions\r\nexport const fetchCountries = () => apiCall(API_ENDPOINTS.COUNTRIES);\r\nexport const fetchCountriesByName = (countryName) => {\r\n  const url = new URL(API_ENDPOINTS.COUNTRIES);\r\n  url.searchParams.append('countryName', countryName);\r\n  return apiCall(url.toString());\r\n};\r\nexport const fetchArtistDetailsByName = (artistName) => {\r\n  const url = new URL(API_ENDPOINTS.ARTIST_DETAILS);\r\n  url.searchParams.append('artist', artistName);\r\n  return apiCall(url.toString());\r\n};\r\nexport const fetchArtistDetails = (params = {}) => {\r\n  const url = new URL(API_ENDPOINTS.ARTIST_DETAILS);\r\n  Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n  return apiCall(url.toString());\r\n};\r\n\r\nexport default API_ENDPOINTS;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAE7E;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,SAAS,EAAE,GAAGL,YAAY,iBAAiB;EAC3CM,cAAc,EAAE,GAAGN,YAAY;AACjC,CAAC;;AAED;AACA,OAAO,MAAMO,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,EAAE;MACrCI,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,GAAGH,OAAO,CAACG;MACb,CAAC;MACD,GAAGH;IACL,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoBJ,QAAQ,CAACK,MAAM,IAAIL,QAAQ,CAACM,UAAU,EAAE,CAAC;IAC/E;IAEA,OAAO,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAGA,CAAA,KAAMb,OAAO,CAACH,aAAa,CAACC,SAAS,CAAC;AACpE,OAAO,MAAMgB,oBAAoB,GAAIC,WAAW,IAAK;EACnD,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACpB,aAAa,CAACC,SAAS,CAAC;EAC5CkB,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,aAAa,EAAEJ,WAAW,CAAC;EACnD,OAAOf,OAAO,CAACgB,GAAG,CAACI,QAAQ,CAAC,CAAC,CAAC;AAChC,CAAC;AACD,OAAO,MAAMC,wBAAwB,GAAIC,UAAU,IAAK;EACtD,MAAMN,GAAG,GAAG,IAAIC,GAAG,CAACpB,aAAa,CAACE,cAAc,CAAC;EACjDiB,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,QAAQ,EAAEG,UAAU,CAAC;EAC7C,OAAOtB,OAAO,CAACgB,GAAG,CAACI,QAAQ,CAAC,CAAC,CAAC;AAChC,CAAC;AACD,OAAO,MAAMG,kBAAkB,GAAGA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK;EACjD,MAAMR,GAAG,GAAG,IAAIC,GAAG,CAACpB,aAAa,CAACE,cAAc,CAAC;EACjD0B,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,CAACG,OAAO,CAACC,GAAG,IAAIZ,GAAG,CAACE,YAAY,CAACC,MAAM,CAACS,GAAG,EAAEJ,MAAM,CAACI,GAAG,CAAC,CAAC,CAAC;EAC7E,OAAO5B,OAAO,CAACgB,GAAG,CAACI,QAAQ,CAAC,CAAC,CAAC;AAChC,CAAC;AAED,eAAevB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}